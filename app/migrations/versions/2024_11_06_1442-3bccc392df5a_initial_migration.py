"""Initial migration

Revision ID: 3bccc392df5a
Revises: 
Create Date: 2024-11-06 14:42:28.059933

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.engine import Inspector

# revision identifiers, used by Alembic.
revision: str = "3bccc392df5a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    inspector = Inspector(op.get_bind())
    if not inspector.has_table('defaultcomments'):
        op.create_table(
            "defaultcomments",
            sa.Column("author", sa.VARCHAR(), autoincrement=False, nullable=False),
            sa.Column("text", sa.VARCHAR(), autoincrement=False, nullable=False),
            sa.Column("group", sa.VARCHAR(), autoincrement=False, nullable=True),
            sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
            sa.Column(
                "created",
                postgresql.TIMESTAMP(),
                autoincrement=False,
                nullable=False,
            ),
            sa.Column(
                "changed",
                postgresql.TIMESTAMP(),
                autoincrement=False,
                nullable=True,
            ),
            sa.PrimaryKeyConstraint("id", name="defaultcomments_pkey"),
            sa.UniqueConstraint("text", "group", name="unique_text_group"),
        )
    if not inspector.has_table('comments'):
        op.create_table(
            "comments",
            sa.Column("author", sa.VARCHAR(), autoincrement=False, nullable=False),
            sa.Column("text", sa.VARCHAR(), autoincrement=False, nullable=False),
            sa.Column(
                "object_id", sa.INTEGER(), autoincrement=False, nullable=False
            ),
            sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
            sa.Column(
                "created",
                postgresql.TIMESTAMP(),
                autoincrement=False,
                nullable=False,
            ),
            sa.Column(
                "changed",
                postgresql.TIMESTAMP(),
                autoincrement=False,
                nullable=True,
            ),
            sa.PrimaryKeyConstraint("id", name="comments_pkey"),
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    inspector = Inspector(op.get_bind())
    if inspector.has_table('comments'):
        op.drop_table("comments")
    if inspector.has_table('defaultcomments'):
        op.drop_table("defaultcomments")
    # ### end Alembic commands ###
